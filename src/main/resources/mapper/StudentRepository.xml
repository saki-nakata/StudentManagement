<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.student.management.repository.StudentRepository">

  <!-- 受講生の一覧 -->
  <select id="searchStudentList" parameterType="raisetech.student.management.dto.SearchCondition"
    resultType="raisetech.student.management.data.Student">
    SELECT * FROM students
    WHERE 1=1
    <if test="studentId != null">
      AND id = #{studentId}
    </if>
    <if test="name != null">
      AND full_name LIKE CONCAT('%', #{name}, '%')
    </if>
    <if test="furigana != null">
      AND furigana LIKE CONCAT('%', #{furigana}, '%')
    </if>
    <if test="nickname != null">
      AND nickname LIKE CONCAT('%', #{nickname}, '%')
    </if>
    <if test="liveCity != null">
      AND live_city LIKE CONCAT('%', #{liveCity}, '%')
    </if>
    <if test="age != null">
      AND age = #{age}
    </if>
    <if test="minAge != null">
      AND age &gt;= #{minAge}
    </if>
    <if test="maxAge != null">
      AND age &lt;= #{maxAge}
    </if>
    <if test="gender != null">
      AND gender = #{gender}
    </if>
    <if test="isDeleted != null">
      AND is_deleted = #{isDeleted}
    </if>
  </select>

  <!-- 受講生コース情報の一覧 -->
  <select id="searchCourseList" parameterType="raisetech.student.management.dto.SearchCondition"
    resultType="raisetech.student.management.data.StudentCourse">
    SELECT * FROM students_courses
    WHERE 1=1
    <if test="courseId != null">
      AND id = #{courseId}
    </if>
    <if test="courseName != null">
      AND course_name LIKE CONCAT('%', #{courseName}, '%')
    </if>
  </select>

  <!-- コース申込状況の一覧 -->
  <select id="searchStatusList" resultType="raisetech.student.management.data.CourseStatus">
    SELECT * FROM course_status
    WHERE 1=1
    <if test="statusId != null">
      AND id = #{statusId}
    </if>
    <if test="status != null">
      AND application_status = #{status}
    </if>
  </select>

  <!-- 受講生の新規登録(IDは自動採番) -->
  <insert id="registerStudent" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO students (full_name, furigana, nickname, email_address, live_city, age, gender,
    remark, is_deleted)
    VALUES (#{fullName}, #{furigana}, #{nickname}, #{emailAddress}, #{liveCity}, #{age}, #{gender},
    #{remark}, #{isDeleted})
  </insert>

  <!-- コース情報の新規登録(IDは自動採番) -->
  <insert id="registerCourse" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO students_courses (student_id, course_name, start_date, scheduled_end_date)
    VALUES (#{studentId}, #{courseName}, #{startDate}, #{scheduledEndDate})
  </insert>

  <!-- 申込状況の新規登録(IDは自動採番) -->
  <insert id="registerStatus" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO course_status (course_id, application_status)
    VALUES (#{courseId}, #{applicationStatus})
  </insert>

  <!-- 受講生の更新 -->
  <update id="updateStudent">
    UPDATE students SET full_name = #{fullName}, furigana = #{furigana}, nickname = #{nickname},
    email_address = #{emailAddress}, live_city = #{liveCity},age = #{age}, gender = #{gender},
    remark = #{remark}, is_deleted = #{isDeleted}
    WHERE id = #{id}
  </update>

  <!-- コース情報の更新 -->
  <update id="updateCourse">
    UPDATE students_courses SET course_name = #{courseName}, start_date = #{startDate},
    scheduled_end_date = #{scheduledEndDate}
    WHERE id = #{id}
  </update>

  <!-- 申込状況の更新 -->
  <update id="updateStatus">
    UPDATE course_status SET application_status = #{applicationStatus}
    WHERE course_id = #{courseId}
  </update>

</mapper>